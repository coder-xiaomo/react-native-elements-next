"use strict";(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[4046],{70682:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>C,frontMatter:()=>c,metadata:()=>N,toc:()=>b});var a=n(9668),i=n(21367),l=(n(96540),n(15680)),r=n(64839),o=(n(21518),n(46061),n(36853)),m=n(35504),g=["components"],d={toc:[]},p="wrapper";function s(e){var t=e.components,n=(0,i.A)(e,g);return(0,l.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("img",{src:"/img/swipeable.gif",width:"500"}),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"<ListItem.Swipeable\n  leftContent={(reset) => (\n    <Button\n      title=\"Info\"\n      onPress={() => reset()}\n      icon={{ name: 'info', color: 'white' }}\n      buttonStyle={{ minHeight: '100%' }}\n    />\n  )}\n  rightContent={(reset) => (\n    <Button\n      title=\"Delete\"\n      onPress={() => reset()}\n      icon={{ name: 'delete', color: 'white' }}\n      buttonStyle={{ minHeight: '100%', backgroundColor: 'red' }}\n    />\n  )}\n>\n  <Icon name=\"My Icon\" />\n  <ListItem.Content>\n    <ListItem.Title>Hello Swiper</ListItem.Title>\n  </ListItem.Content>\n  <ListItem.Chevron />\n</ListItem.Swipeable>\n")))}s.isMDXComponent=!0;var y=["components"],c={id:"listitem_swipeable",title:"ListItem.Swipeable"},u=void 0,N={unversionedId:"components/listitem_swipeable",id:"version-4.0.0-rc.8/components/listitem_swipeable",title:"ListItem.Swipeable",description:"We offer a special kind of ListItem which is swipeable from both ends and allows users select an event.",source:"@site/versioned_docs/version-4.0.0-rc.8/components/ListItem.Swipeable.mdx",sourceDirName:"components",slug:"/components/listitem_swipeable",permalink:"/react-native-elements-next/docs/components/listitem_swipeable",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-4.0.0-rc.8/components/ListItem.Swipeable.mdx",tags:[],version:"4.0.0-rc.8",frontMatter:{id:"listitem_swipeable",title:"ListItem.Swipeable"},sidebar:"docs",previous:{title:"ListItem.Subtitle",permalink:"/react-native-elements-next/docs/components/listitem_subtitle"},next:{title:"ListItem.Title",permalink:"/react-native-elements-next/docs/components/listitem_title"}},h={},b=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],w={toc:b},f="wrapper";function C(e){var t=e.components,n=(0,i.A)(e,y);return(0,l.yg)(f,(0,a.A)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)(r.y,{mdxType:"IconsStyle"}),(0,l.yg)("p",null,"We offer a special kind of ListItem which is swipeable from both ends and allows users select an event."),(0,l.yg)("h2",{id:"usage"},"Usage"),(0,l.yg)("div",{class:"row inline-flex-center"},(0,l.yg)("div",{class:"col col--3"},(0,l.yg)("h4",null,"Import")),(0,l.yg)("div",{class:"col col--9"},(0,l.yg)(o.A,{mdxType:"CodeBlock"},"import { ListItem } from '@rneui/themed';")),(0,l.yg)("div",{class:"col col--3"},(0,l.yg)("h4",null,"Theme Key"," ",(0,l.yg)("a",{href:"../customizing#using-themeprovider"},(0,l.yg)(m.wfp,{mdxType:"BiInfoCircle"})))),(0,l.yg)("div",{class:"col col--9"},(0,l.yg)(o.A,{mdxType:"CodeBlock"},"ListItemSwipeable"))),(0,l.yg)(s,{mdxType:"Usage"}),(0,l.yg)("h2",{id:"props"},"Props"),(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"Includes all ",(0,l.yg)("a",{parentName:"p",href:"listitem#props"},"ListItem")," props.")),(0,l.yg)("div",{class:"table-responsive"},(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Name"),(0,l.yg)("th",{parentName:"tr",align:null},"Type"),(0,l.yg)("th",{parentName:"tr",align:null},"Default"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"animation")),(0,l.yg)("td",{parentName:"tr",align:null},"Animated.TimingAnimationConfig"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"Object with duration 350ms and type timing")),(0,l.yg)("td",{parentName:"tr",align:null},"Decide whether to show animation.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"leftContent")),(0,l.yg)("td",{parentName:"tr",align:null},"ReactNode or resetCallback => ReactNode"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Left Content.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"leftStyle")),(0,l.yg)("td",{parentName:"tr",align:null},"View Style"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Style of left container.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"leftWidth")),(0,l.yg)("td",{parentName:"tr",align:null},"number"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"ScreenWidth / 3")),(0,l.yg)("td",{parentName:"tr",align:null},"Width of swipe left container.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"minSlideWidth")),(0,l.yg)("td",{parentName:"tr",align:null},"number"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"ScreenWidth / 3")),(0,l.yg)("td",{parentName:"tr",align:null},"minimum horizontal distance to open content")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"onSwipeBegin")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"(direction: left")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"right) => unknown")),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Handler for swipe in either direction")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"onSwipeEnd")),(0,l.yg)("td",{parentName:"tr",align:null},"() => unknown"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Handler for swipe end.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"rightContent")),(0,l.yg)("td",{parentName:"tr",align:null},"ReactNode or resetCallback => ReactNode"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Right Content.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"rightStyle")),(0,l.yg)("td",{parentName:"tr",align:null},"View Style"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Style of right container.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"rightWidth")),(0,l.yg)("td",{parentName:"tr",align:null},"number"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"ScreenWidth / 3")),(0,l.yg)("td",{parentName:"tr",align:null},"Width of swipe right container."))))))}C.isMDXComponent=!0}}]);