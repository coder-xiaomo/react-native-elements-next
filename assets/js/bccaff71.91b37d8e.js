(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[1582],{18411:()=>{},22174:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>I,default:()=>f,frontMatter:()=>y,metadata:()=>h,toc:()=>L});var a=n(9668),i=n(21367),r=(n(96540),n(15680)),l=n(70926),o=(n(21518),n(46061),n(72787)),s=n(35504),m=["components"],c={toc:[]},d="wrapper";function p(e){var t=e.components,n=(0,i.A)(e,m);return(0,r.yg)(d,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}))}p.isMDXComponent=!0;var g=n(52952),u=["components"],y={id:"listitem",title:"ListItem"},I=void 0,h={unversionedId:"components/listitem",id:"version-4.0.0-rc.7/components/listitem",title:"ListItem",description:"ListItems are used to display rows of information, such as a contact list, playlist, or menu. They are very customizable and can contain switches, avatars, badges, icons, and more.",source:"@site/versioned_docs/version-4.0.0-rc.7/components/ListItem.mdx",sourceDirName:"components",slug:"/components/listitem",permalink:"/react-native-elements-next/docs/4.0.0-rc.7/components/listitem",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-4.0.0-rc.7/components/ListItem.mdx",tags:[],version:"4.0.0-rc.7",frontMatter:{id:"listitem",title:"ListItem"},sidebar:"docs",previous:{title:"LinearProgress",permalink:"/react-native-elements-next/docs/4.0.0-rc.7/components/linearprogress"},next:{title:"ListItem.Accordion",permalink:"/react-native-elements-next/docs/4.0.0-rc.7/components/listitem_accordion"}},v={},L=[{value:"Usage",id:"usage",level:2},{value:"Default",id:"default",level:3},{value:"Icon",id:"icon",level:3},{value:"Avatar",id:"avatar",level:3},{value:"LinearGradient",id:"lineargradient",level:3},{value:"Accordion",id:"accordion",level:3},{value:"Swipeable",id:"swipeable",level:3},{value:"Checkbox",id:"checkbox",level:3},{value:"Props",id:"props",level:2},{value:"Playground",id:"playground",level:2}],b={toc:L},C="wrapper";function f(e){var t=e.components,n=(0,i.A)(e,u);return(0,r.yg)(C,(0,a.A)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)(l.y,{mdxType:"IconsStyle"}),(0,r.yg)("p",null,"ListItems are used to display rows of information, such as a contact list, playlist, or menu. They are very customizable and can contain switches, avatars, badges, icons, and more."),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)("div",{class:"row inline-flex-center"},(0,r.yg)("div",{class:"col col--3"},(0,r.yg)("h4",null,"Import")),(0,r.yg)("div",{class:"col col--9"},(0,r.yg)(o.A,{mdxType:"CodeBlock"},"import { ListItem } from '@rneui/themed';")),(0,r.yg)("div",{class:"col col--3"},(0,r.yg)("h4",null,"Theme Key"," ",(0,r.yg)("a",{href:"../customizing#using-themeprovider"},(0,r.yg)(s.wfp,{mdxType:"BiInfoCircle"})))),(0,r.yg)("div",{class:"col col--9"},(0,r.yg)(o.A,{mdxType:"CodeBlock"},"ListItem"))),(0,r.yg)("h3",{id:"default"},"Default"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live showCode=true",live:!0,showCode:"true"},"<ListItem>\n  <ListItem.Content>\n    <ListItem.Title>John Doe</ListItem.Title>\n    <ListItem.Subtitle>CEO, Example.com</ListItem.Subtitle>\n  </ListItem.Content>\n</ListItem>\n")),(0,r.yg)("h3",{id:"icon"},"Icon"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'<>\n  <ListItem>\n    <Icon name="inbox" type="material-community" color="grey" />\n    <ListItem.Content>\n      <ListItem.Title>Inbox</ListItem.Title>\n    </ListItem.Content>\n    <ListItem.Chevron />\n  </ListItem>\n  <ListItem>\n    <Icon name="trash-can-outline" type="material-community" color="grey" />\n    <ListItem.Content>\n      <ListItem.Title>Trash</ListItem.Title>\n    </ListItem.Content>\n    <ListItem.Chevron />\n  </ListItem>\n</>\n')),(0,r.yg)("h3",{id:"avatar"},"Avatar"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"<>\n  <ListItem bottomDivider>\n    <Avatar\n      rounded\n      source={{ uri: 'https://randomuser.me/api/portraits/men/36.jpg' }}\n    />\n    <ListItem.Content>\n      <ListItem.Title>John Doe</ListItem.Title>\n      <ListItem.Subtitle>President</ListItem.Subtitle>\n    </ListItem.Content>\n  </ListItem>\n  <ListItem bottomDivider>\n    <Avatar\n      rounded\n      icon={{\n        name: 'person-outline',\n        type: 'material',\n        size: 26,\n      }}\n      containerStyle={{ backgroundColor: '#c2c2c2' }}\n    />\n    <ListItem.Content>\n      <ListItem.Title>Alba King</ListItem.Title>\n      <ListItem.Subtitle>Vice President</ListItem.Subtitle>\n    </ListItem.Content>\n  </ListItem>\n  <ListItem>\n    <Avatar rounded title=\"A\" containerStyle={{ backgroundColor: 'grey' }} />\n    <ListItem.Content>\n      <ListItem.Title>Adam Eva</ListItem.Title>\n      <ListItem.Subtitle>Vice Chairman</ListItem.Subtitle>\n    </ListItem.Content>\n  </ListItem>\n</>\n")),(0,r.yg)("h3",{id:"lineargradient"},"LinearGradient"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"<ListItem\n  linearGradientProps={{\n    colors: ['#FF9800', '#F44336'],\n    start: { x: 1, y: 0 },\n    end: { x: 0.2, y: 0 },\n  }}\n  ViewComponent={LinearGradient} // Only if no expo\n>\n  <Avatar\n    rounded\n    source={{ uri: 'https://randomuser.me/api/portraits/men/33.jpg' }}\n  />\n  <ListItem.Content>\n    <ListItem.Title style={{ color: 'white', fontWeight: 'bold' }}>\n      Chris Jackson\n    </ListItem.Title>\n    <ListItem.Subtitle style={{ color: 'white' }}>\n      Vice Chairman\n    </ListItem.Subtitle>\n  </ListItem.Content>\n  <ListItem.Chevron color=\"white\" />\n</ListItem>\n")),(0,r.yg)("h3",{id:"accordion"},"Accordion"),(0,r.yg)("p",null,"Use as a collapsible list item refer props for ",(0,r.yg)("a",{parentName:"p",href:"./listItem_accordion#props"},"ListItem.Accordion")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"function RNEListItemAccordion() {\n  const [expanded, setExpanded] = React.useState(false);\n  return (\n    <>\n      <ListItem.Accordion\n        content={\n          <ListItem.Content>\n            <ListItem.Title>Top Users</ListItem.Title>\n            <ListItem.Subtitle>Tap to expand</ListItem.Subtitle>\n          </ListItem.Content>\n        }\n        isExpanded={expanded}\n        onPress={() => {\n          setExpanded(!expanded);\n        }}\n      >\n        <ListItem>\n          <Avatar\n            rounded\n            source={{\n              uri: 'https://randomuser.me/api/portraits/men/32.jpg',\n            }}\n          />\n          <ListItem.Content>\n            <ListItem.Title>John Doe</ListItem.Title>\n            <ListItem.Subtitle>Principle Engineer</ListItem.Subtitle>\n          </ListItem.Content>\n        </ListItem>\n        <ListItem>\n          <Avatar\n            rounded\n            source={{\n              uri: 'https://randomuser.me/api/portraits/men/36.jpg',\n            }}\n          />\n          <ListItem.Content>\n            <ListItem.Title>Albert</ListItem.Title>\n            <ListItem.Subtitle>Staff Engineer</ListItem.Subtitle>\n          </ListItem.Content>\n        </ListItem>\n      </ListItem.Accordion>\n    </>\n  );\n}\n")),(0,r.yg)("h3",{id:"swipeable"},"Swipeable"),(0,r.yg)("p",null,"Try swiping list item, refer props for ",(0,r.yg)("a",{parentName:"p",href:"./listItem_swipeable#props"},"ListItem.Swipeable")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"<ListItem.Swipeable\n  leftWidth={80}\n  rightWidth={90}\n  minSlideWidth={40}\n  leftContent={(action) => (\n    <Button\n      containerStyle={{\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: '#f4f4f4',\n      }}\n      type=\"clear\"\n      icon={{\n        name: 'archive-outline',\n        type: 'material-community',\n      }}\n      onPress={action}\n    />\n  )}\n  rightContent={(action) => (\n    <Button\n      containerStyle={{\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: '#f4f4f4',\n      }}\n      type=\"clear\"\n      icon={{ name: 'delete-outline' }}\n      onPress={action}\n    />\n  )}\n>\n  <Icon name=\"label-important-outline\" type=\"material\" />\n  <ListItem.Content>\n    <ListItem.Title>Email from John Doe</ListItem.Title>\n    <ListItem.Subtitle>Hey, I'm John Doe</ListItem.Subtitle>\n  </ListItem.Content>\n  <ListItem.Chevron />\n</ListItem.Swipeable>\n")),(0,r.yg)("h3",{id:"checkbox"},"Checkbox"),(0,r.yg)("p",null,"Refer props for ",(0,r.yg)("a",{parentName:"p",href:"./listItem_checkbox#props"},"ListItem.CheckBox")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'function () {\n     const [checked, setChecked] = React.useState([false, false]);\n     return (\n       <>\n         <ListItem bottomDivider>\n           <ListItem.CheckBox\n             // Use ThemeProvider to change the defaults of the checkbox\n             iconType="material-community"\n             checkedIcon="checkbox-marked"\n             uncheckedIcon="checkbox-blank-outline"\n             checked={checked[0]}\n             onPress={() => setChecked([!checked[0], checked[1]])}\n           />\n           <ListItem.Content>\n             <ListItem.Title>User 1</ListItem.Title>\n             <ListItem.Subtitle>CA, US</ListItem.Subtitle>\n           </ListItem.Content>\n           <ListItem.Chevron />\n         </ListItem>\n         <ListItem bottomDivider>\n           <ListItem.CheckBox\n             // Use ThemeProvider to change the defaults of the checkbox\n             iconType="material-community"\n             checkedIcon="checkbox-marked"\n             uncheckedIcon="checkbox-blank-outline"\n             checked={checked[1]}\n             onPress={() => setChecked([checked[0], !checked[1]])}\n           />\n           <ListItem.Content>\n             <ListItem.Title>User 2</ListItem.Title>\n             <ListItem.Subtitle>HR, India</ListItem.Subtitle>\n           </ListItem.Content>\n           <ListItem.Chevron />\n         </ListItem>\n       </>\n     );\n   }\n')),(0,r.yg)(p,{mdxType:"Usage"}),(0,r.yg)("h2",{id:"props"},"Props"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Includes all ",(0,r.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/view#props"},"View")," props.")),(0,r.yg)("div",{class:"table-responsive"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Component")),(0,r.yg)("td",{parentName:"tr",align:null},"React Component"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Replace element with custom element.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"ViewComponent")),(0,r.yg)("td",{parentName:"tr",align:null},"React Component"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Container for linear gradient.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"bottomDivider")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Add divider at the bottom of the list item.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"children")),(0,r.yg)("td",{parentName:"tr",align:null},"any"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Add enclosed children.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"containerStyle")),(0,r.yg)("td",{parentName:"tr",align:null},"View Style"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Additional main container styling.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"disabledStyle")),(0,r.yg)("td",{parentName:"tr",align:null},"View Style"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Specific styling to be used when list item is disabled.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"linearGradientProps")),(0,r.yg)("td",{parentName:"tr",align:null},"any"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Props for linear gradient component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"pad")),(0,r.yg)("td",{parentName:"tr",align:null},"number"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Adds spacing between the leftComponent, the title component & right component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"topDivider")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Add divider at the top of the list item."))))),(0,r.yg)("h2",{id:"playground"},"Playground"),(0,r.yg)(g.A,{mdxType:"Play"}))}f.isMDXComponent=!0},26795:(e,t,n)=>{"use strict";n.d(t,{A:()=>g});var a=n(9668),i=n(96540),r=n(91010),l=n(32594),o=n(20018),s=n(96109),m=n(11245),c=n(34397),d=n(50546),p=n(25407);const g=function(e){var t=e.params,n=e.containerStyle,g=void 0===n?{}:n;return i.createElement(r.A,{fallback:i.createElement(i.Fragment,null,"Loading...")},(function(){return i.createElement(d.q9.Provider,null,i.createElement(d.Oy,{initialMetrics:p.Y},i.createElement("div",{style:Object.assign({border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative"},g)},i.createElement(l.A,(0,a.A)({},t.compilerProps,{minHeight:62,placeholder:o.A}))),i.createElement(s.A,{msg:t.errorProps.msg,isPopup:!0}),i.createElement(m.A,t.knobProps),i.createElement(s.A,t.errorProps),i.createElement(c.w,t.actions)))}))}},33557:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var a=n(96540),i=n(8755),r=n(64270),l=n(45550),o=n(91147);const s=Object.assign({React:a,LinearGradient:o.A},i,r,l,a)},52952:(e,t,n)=>{"use strict";n.d(t,{A:()=>m});var a=n(96540),i=n(75584),r=n(64270),l=n(26795),o=n(10171),s=n(11451);const m=function(){var e=(0,o.A)({componentName:"ListItem",props:{children:{type:s.B.ReactNode,value:'<Avatar source={{uri: "https://avatars0.githubusercontent.com/u/32242596?s=460&u=1ea285743fc4b083f95d6ee0be2e7bb8dcfc676e&v=4"}} /> \n          <ListItem.Content>\n            <ListItem.Title><Text>Pranshu Chittora</Text></ListItem.Title>\n            <ListItem.Subtitle><Text>React Native Elements</Text></ListItem.Subtitle>\n          </ListItem.Content>'},bottomDivider:{type:s.B.Boolean,value:!1},Component:{type:s.B.Object,value:"TouchableHighlight",description:"View or TouchableHighlight (default) if onPress method is added as prop"},containerStyle:{type:s.B.Object,value:"{}"},disabled:{type:s.B.Boolean,value:!1},disabledStyle:{type:s.B.Object,value:"{opacity:0.5}"},onLongPress:{type:s.B.Function,value:'() => console.log("onLongPress()")'},onPress:{type:s.B.Function,value:'() => console.log("onLongPress()")'},pad:{type:s.B.Number,value:20},topDivider:{type:s.B.Boolean,value:!1},ViewComponent:{type:s.B.Object,value:"",description:"ontainer for linear gradient (for non-expo user)"}},scope:{ListItem:r.ListItem,Avatar:r.Avatar,Text:r.Text,TouchableHighlight:i.A},imports:{"@rneui/base":{named:["ListItem","Avatar"]},"react-native":{named:["TouchableHighlight"]}}});return a.createElement(a.Fragment,null,a.createElement(l.A,{params:e}))}},68260:()=>{},70926:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(96540),i=n(3352),r=n(14628),l=n(1547),o=n(83564),s=function(){return a.createElement(i.A,null,a.createElement("style",{type:"text/css"},"\n          @font-face {\n            font-family: 'MaterialIcons';\n            src: url("+l.A+") format('truetype');\n          }\n          @font-face {\n            font-family: 'FontAwesome';\n            src: url("+o.A+") format('truetype');\n          }\n          @font-face {\n            font-family: 'MaterialCommunityIcons';\n            src: url("+r.A+") format('truetype');\n          }\n        "))}},78360:(e,t,n)=>{"use strict";n.d(t,{A:()=>v});var a=n(21367),i=n(9668),r=n(96540),l=n(53686),o=n(20053),s=(n(26297),n(5222)),m=n(91010),c=n(41262);const d={playgroundContainer:"playgroundContainer_TGbA",playgroundHeader:"playgroundHeader_qwyd",playgroundEditor:"playgroundEditor_PvJ1",playgroundPreview:"playgroundPreview_bb8I",toggleContainer:"toggleContainer_ZZiH",toggleIcon:"toggleIcon_OnrQ",showCode:"showCode_O0Od"};var p=n(195),g=n(59644),u=["children","transformCode"];function y(){return r.createElement("div",null,"Loading...")}function I(e){var t=(0,p.A)(),n=(0,r.useContext)(l.MY),a=n.code,o=n.language,s=n.theme,m=n.disabled,c=n.onChange;return r.createElement(l.w,(0,i.A)({key:String(t),code:a,language:o,theme:s,disabled:m,onChange:c},e,{className:d.playgroundEditor}))}function h(e){var t=e.showCode,n=e.preImports,a=void 0===n?"":n,i=(e.wrapper,r.useState(t)),s=i[0],c=i[1],p=function(){c((function(e){return!e}))};return r.createElement(r.Fragment,null,r.createElement("div",{className:d.playgroundPreview},r.createElement(m.A,{fallback:r.createElement(y,null)},(function(){return r.createElement(r.Fragment,null,r.createElement(l.pA,null),r.createElement(l.p1,null),r.createElement("div",{className:d.toggleContainer},r.createElement("div",{className:(0,o.A)(d.toggleIcon),onClick:p},r.createElement(g.luQ,null),r.createElement("span",{className:d.showCode},s?"Hide":"Show"," Code"))))}))),s&&r.createElement(I,{preImports:a,showCode:s}))}function v(e){var t=e.children,n=(e.transformCode,(0,a.A)(e,u)),o=((0,s.A)().siteConfig.themeConfig.liveCodeBlock.playgroundPosition,(0,c.A)());return r.createElement("div",{className:d.playgroundContainer},r.createElement(l.Q,(0,i.A)({code:t.replace(/\n$/,""),theme:o},n),r.createElement(h,{showCode:n.showCode})))}}}]);